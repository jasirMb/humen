<link rel="stylesheet" href="/admin/stylesheets/style.css">
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://www.kryogenix.org/code/browser/sorttable/sorttable.js"></script>
<style>
  #myInput {
    background-image: url('/css/searchicon.png');
    /* Add a search icon to input */
    background-position: 10px 12px;
    /* Position the search icon */
    background-repeat: no-repeat;
    /* Do not repeat the icon image */
    width: 21%;
    height: 46px;
    /* Full-width */
    font-size: 16px;
    /* Increase font-size */
    padding: 12px 20px 12px 40px;
    /* Add some padding */
    border: 1px solid #ddd;
    /* Add a grey border */
    margin-bottom: 0px;
    /* Add some space below the input */
    margin-left: 20px;
    border-color: rgb(104, 65, 141);
</style>
<style>
  * {
    margin: 0;
    padding: 0;
    text-align: center;
  }

  body {
    background-color: #fafafa;
  }

  table {
    color: #333;
    font-size: .9em;
    font-weight: 300;
    line-height: 40px;
    border-collapse: separate;
    border-spacing: 0;
    border: 2px solid #ed1c40;
    width: 500px;
    margin: 50px auto;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, .16);
    border-radius: 2px;
  }

  th {
    background: #ed1c40;
    color: rgb(0, 0, 0);
    border: none;
  }

  tr:hover:not(th) {
    background-color: rgba(237, 28, 64, .1);
  }


  input[type="button"] {
    transition: all .3s;
    border: 1px solid #ddd;
    padding: 8px 16px;
    text-decoration: none;
    border-radius: 5px;
    font-size: 15px;
  }

  input[type="button"]:not(.active) {
    background-color: transparent;
  }

  .active {
    background-color: #8c00ff;
    color: #fff;
  }

  input[type="button"]:hover:not(.active) {
    background-color: rgb(168, 110, 206);
  }
  }
</style>












{{!-- body --}}
<div class="col-lg-10 grid-margin stretch-card">
  <div class="card">
    <div class="card-body">

      <p class="card-description mt-5">
      <h1>PRODUCT MANAGEMENT</h1>
      </p>
      <a href="/admin/add-product" class="btn btn-outline-success btn-lg">Add new Product</a>
      <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names..">
      <table class=" sortable table table-striped mt-5" id="myTable">
        <thead>
          <tr>
            <th> Image </th>
            <th> Name </th>
            <th> Brand </th>
            <th> Quantity</th>
            <th> Category </th>
            <th> Price </th>
            <th> Edit </th>
            <th> Remove </th>
          </tr>
        </thead>
        <tbody>
          {{#each products}}

          <tr>
            <td class="py-1">
              <img src="/productImages/{{this.image.[0]}}" alt="image" />
            </td>
            <td>{{this.Name}}</td>
            <td> {{this.Brand}} </td>
            <td>{{this.Quantity}}</td>
            <td>{{this.Category}}</td>
            <td>{{this.Price}}</td>
            <td><a href="/admin/edit-product/{{this._id}} " class="btn btn-primary">Edit</a></td>
            {{#if archive}}
            <td> <button class="btn btn-danger" onclick="alertedUndo('{{this._id}}');">Unhide</button>
            </td>
            {{else}}
            <td> <button class="btn btn-danger" onclick="alerted('{{this._id}}');">Hide</button>
            </td>
            {{/if}}
          </tr>
          {{/each}}
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
  function alerted(proId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, hide it!'
    }).then((result) => {
      $.ajax({
        url: '/admin/delete-product/' + proId,
        method: 'post',
        success: (response) => {
          if (result.isConfirmed) {
            Swal.fire({

              icon: 'success',
              title: 'Product hided succesfuly',
              showConfirmButton: false,
            })
            setTimeout(() => {
              location.reload()
            }, 800)
          }
        }
      })

    })
  }

  function alertedUndo(proId) {
    console.log("working???????????????????")
    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, unhide  it!'
    }).then((result) => {
      $.ajax({
        url: '/admin/undoDelete-product/' + proId,
        method: 'post',
        success: (response) => {
          if (result.isConfirmed) {
            Swal.fire({

              icon: 'success',
              title: 'product is unhided',
              showConfirmButton: false,
            })
            setTimeout(() => {
              location.reload()
            }, 800)
          }
        }
      })

    })
  }

</script>
<script>
  function myFunction() {
    // Declare variables
    var input, filter, table, tr, td, i, txtValue;
    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    table = document.getElementById("myTable");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows, and hide those who don't match the search query
    for (i = 0; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td")[1];
      if (td) {
        txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }
</script>
<script>
  /*		=================================
**		==== Simple Table Controller ====
**		=================================
**
**
**			With Pure JavaScript .. 
**	 
**
**		No Libraries or Frameworks needed!
**
**
**				fb.com/bastony
**	
*/



  // get the table element
  var $table = document.getElementById("myTable"),
    // number of rows per page
    $n = 5,
    // number of rows of the table
    $rowCount = $table.rows.length,
    // get the first cell's tag name (in the first row)
    $firstRow = $table.rows[0].firstElementChild.tagName,
    // boolean var to check if table has a head row
    $hasHead = ($firstRow === "TH"),
    // an array to hold each row
    $tr = [],
    // loop counters, to start count from rows[1] (2nd row) if the first row has a head tag
    $i, $ii, $j = ($hasHead) ? 1 : 0,
    // holds the first row if it has a (<TH>) & nothing if (<TD>)
    $th = ($hasHead ? $table.rows[(0)].outerHTML : "");
  // count the number of pages
  var $pageCount = Math.ceil($rowCount / $n);
  // if we had one page only, then we have nothing to do ..
  if ($pageCount > 1) {
    // assign each row outHTML (tag name & innerHTML) to the array
    for ($i = $j, $ii = 0; $i < $rowCount; $i++, $ii++)
      $tr[$ii] = $table.rows[$i].outerHTML;
    // create a div block to hold the buttons
    $table.insertAdjacentHTML("afterend", "<div id='buttons'></div");
    // the first sort, default page is the first one
    sort(1);
  }

  // ($p) is the selected page number. it will be generated when a user clicks a button
  function sort($p) {
    /* create ($rows) a variable to hold the group of rows
    ** to be displayed on the selected page,
    ** ($s) the start point .. the first row in each page, Do The Math
    */
    var $rows = $th, $s = (($n * $p) - $n);
    for ($i = $s; $i < ($s + $n) && $i < $tr.length; $i++)
      $rows += $tr[$i];

    // now the table has a processed group of rows ..
    $table.innerHTML = $rows;
    // create the pagination buttons
    document.getElementById("buttons").innerHTML = pageButtons($pageCount, $p);
    // CSS Stuff
    document.getElementById("id" + $p).setAttribute("class", "active");
  }


  // ($pCount) : number of pages,($cur) : current page, the selected one ..
  function pageButtons($pCount, $cur) {
    /* this variables will disable the "Prev" button on 1st page
       and "next" button on the last one */
    var $prevDis = ($cur == 1) ? "disabled" : "",
      $nextDis = ($cur == $pCount) ? "disabled" : "",
      /* this ($buttons) will hold every single button needed
      ** it will creates each button and sets the onclick attribute
      ** to the "sort" function with a special ($p) number..
      */
      $buttons = "<input type='button' value='<< Prev' onclick='sort(" + ($cur - 1) + ")' " + $prevDis + ">";
    for ($i = 1; $i <= $pCount; $i++)
      $buttons += "<input type='button' id='id" + $i + "'value='" + $i + "' onclick='sort(" + $i + ")'>";
    $buttons += "<input type='button' value='Next >>' onclick='sort(" + ($cur + 1) + ")' " + $nextDis + ">";
    return $buttons;
  }
</script>